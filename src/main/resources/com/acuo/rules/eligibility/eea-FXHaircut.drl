package com.acuo.rules.eligibility

import com.acuo.common.model.assets.Assets
import com.acuo.common.model.agreements.Agreement
import com.acuo.common.model.margin.Types

import org.slf4j.Logger
global Logger log;

rule "eea-FXHaircut-im"
	when
		$ag: Agreement(marginType == Types.MarginType.Initial)
		$asset: Assets(currency == $ag.terminateCurrency)
		$eligible: EligibleResult()

		$provider: HaircutProvider(name == "EEA")
	then
		$eligible.setFxHaircut( 0 );
		update($eligible);
        log.info("Rule: '{}', asset: '{}'", drools.getRule().getName(), $asset );
end


rule "eea-FXHaircut-im-a"
	when
		$ag: Agreement(marginType == Types.MarginType.Initial)
		$asset: Assets(currency!= $ag.terminateCurrency)
		$provider: HaircutProvider(name == "EEA")
		$eligible: EligibleResult()
	then
		$eligible.setFxHaircut( 0.08 );
		update($eligible);
        log.info("Rule: '{}', asset: '{}'", drools.getRule().getName(), $asset );
end

rule "eea-FXHaircut-vm-cash"
	when
		$asset: Assets(type== "cash")
		$ag: Agreement(marginType == Types.MarginType.Variation)
		$provider: HaircutProvider(name == "EEA")
		$eligible: EligibleResult()
	then
		$eligible.setFxHaircut( 0 );
        log.info("Rule: '{}', asset: '{}'", drools.getRule().getName(), $asset );
end


rule "eea-FXHaircut-vm-noncash-a"
	when
		$asset: Assets(type!= "cash")
		$ag: Agreement(marginType == Types.MarginType.Variation, eligibleCurrency not contains $asset.currency)
		$provider: HaircutProvider(name == "EEA")
		$eligible: EligibleResult()
	then
		$eligible.setFxHaircut( 0.08 );
		update($eligible);
        log.info("Rule: '{}', asset: '{}'", drools.getRule().getName(), $asset );
end

rule "eea-FXHaircut-vm-noncash"
	when
		$asset: Assets(type!= "cash")
		$ag: Agreement(marginType == Types.MarginType.Variation, eligibleCurrency contains $asset.currency)
		$provider: HaircutProvider(name == "EEA")
		$eligible: EligibleResult()
	then
		$eligible.setFxHaircut( 0 );
		update($eligible);
        log.info("Rule: '{}', asset: '{}'", drools.getRule().getName(), $asset );
end
